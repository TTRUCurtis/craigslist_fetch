These programs are designed to get data from craigslist for further analysis.  Work was pulled mid-upgrade and is not currently operational.  The TODOs are listed.

scrape_id_list.py 

def usage():
    print("python " + str(sys.argv[0]) + "[--city [craigslist city name]] [--category [3 letter craigslist category id or \"all\"]] [--database [database tables go in]] \n" +
                                         " [--replace_tables] [--table_append_timestamp] \n" +
                                         " \'replace_tables\' and \'table_append_timestamp\' default to FALSE.  Use the flags to set to TRUE") 

    This is the first program to run.  It takes a combination of a city and a for-sale category (or "all") and pulls "short" data for that item. 
    The results are 2 tables:
         "craigslist_<city>_<category>_short" which contains the item data
         "craigslist_<city>_<category>_html" which contains the raw results from the original HTML and data calls.

        TODO: (1) When work was pulled on the project, I had found that for LosAngeles, there are actually sub-areas and possibly different categories mixed together that you need to pull from. (the created detail urls were generating incorrectly.)
              (2) You also needed to add the "search" call to the html table calls because you may need to reconstruct the category data.

                https://losangeles.craigslist.org/sgv/avo/d/whittier-slick-aircraft-magneto/7776832653.html
                https://losangeles.craigslist.org/lgb/avo/d/long-beach-dc-electric-aircraft-motors/7778064280.html
                https://losangeles.craigslist.org/wst/avo/d/sisters-beechcraft-baron-be58-fuel/7779147609.html

        When you're parsing this data field for an "data" -> "items" -> [#]:
        [9231222, 54928, 122, -1, "1:1~33.8154~-118.1772"]

        "1:1~33.8154~-118.1772"
            The first number (in the 1:1) corresponds to "data" -> "decode" -> "locations" -> [#] -> [2] is the TLA for the location ("sgv", "lgb", "wst") - in this case "wst"

        122 coresponds to the categories below. (pts)

        You combine those to create the url:
        https://losangeles.craigslist.org/wst/pts/d/long-beach-tesla-battery/7779313462.html

        The category data is gathered from this call: https://www.craigslist.org/static/www/search-2024-08-23-09-19-8f7c89919cb4bf0cdf90d7ba280683b8815a4552.js
        You're looking to parse this line:

        [["bbb", "services", "", "B", [4, "biz", "small biz ads", ""], [76, "cps", "computer services", ""], [77, "crs", "creative services", ""], [79, "evs", "event services", ""], [80, "hss", "household services", ""], [81, "lss", "lessons & tutoring", ""], [82, "lbs", "labor & moving", "labor / hauling / moving"], [83, "sks", "skilled trade services", ""], [103, "lgs", "legal services", ""], [104, "fns", "financial services", ""], [105, "rts", "real estate services", ""], [106, "aos", "automotive services", ""], [138, "bts", "beauty services", ""], [139, "wet", "write/edit/trans", "writing / editing / translation"], [140, "trv", "travel/vacation", "travel/vacation services"], [154, "fgs", "farm & garden services", ""], [155, "pas", "pet services", ""], [156, "mas", "marine services", ""], [158, "cys", "cycle services", ""], [207, "cms", "cell phone / mobile services", ""], [210, "hws", "health/wellness", "health/wellness services"]], ["ccc", "community", "", "C", [3, "com", "general", "general community"], [29, "vol", "volunteers", ""], [35, "act", "activity partners", ""], [36, "rid", "rideshare", ""], [37, "pet", "pets", ""], [56, "kid", "childcare", ""], [63, "mis", "missed connections", ""], [70, "ats", "artists", ""], [71, "muc", "musicians", ""], [87, "pol", "politics", ""], [88, "laf", "lost & found", ""], [90, "rnr", "rants & raves", ""], [91, "grp", "groups", ""], [116, "vnn", "local news and views", ""]], ["eee", "events", "events/classes", "E", [8, "eve", "events", ""], [38, "cls", "classes", ""]], ["ggg", "gigs", "", "G", [108, "tlg", "talent gigs", ""], [109, "cwg", "crew gigs", ""], [110, "cpg", "computer gigs", ""], [111, "lbg", "labor gigs", ""], [112, "wrg", "writing gigs", ""], [113, "dmg", "domestic gigs", ""], [114, "crg", "creative gigs", ""], [115, "evg", "event gigs", ""]], ["hhh", "housing", "", "H", [0, "rea", "real estate for sale", "real estate", [143, "reo", "real estate - by owner", ""], [144, "reb", "real estate - by broker", ""]], [1, "apa", "apartments / housing for rent", ""], [2, "hou", "wanted: apts", ""], [18, "roo", "rooms & shares", ""], [19, "sha", "wanted: room/share", ""], [39, "sub", "sublets & temporary", ""], [40, "off", "office & commercial", ""], [41, "prk", "parking & storage", ""], [58, "sbw", "wanted: sublet/temp", ""], [65, "swp", "housing swap", ""], [99, "vac", "vacation rentals", ""], [121, "rew", "wanted: real estate", ""]], ["jjj", "jobs", "", "J", [11, "web", "web design", "web/html/info design"], [12, "bus", "business", "business/mgmt"], [13, "mar", "marketing", "marketing/advertising/pr"], [15, "etc", "etcetera", "et cetera"], [16, "wri", "writing", "writing/editing"], [21, "sof", "software", "software/qa/dba/etc"], [23, "acc", "finance", "accounting/finance"], [24, "ofc", "admin/office", ""], [25, "med", "media", "art/media/design"], [26, "hea", "healthcare", ""], [27, "ret", "retail/wholesale", ""], [28, "npo", "nonprofit", ""], [47, "lgl", "legal", "legal/paralegal"], [48, "egr", "engineering", "architect/engineer/cad"], [49, "sls", "sales", ""], [50, "sad", "systems/networking", ""], [52, "tfr", "tv video radio", "tv/film/video/radio"], [54, "hum", "human resource", ""], [55, "tch", "tech support", "technical support"], [57, "edu", "education", "education/teaching"], [59, "trd", "skilled trades", "skilled trades/artisan"], [61, "gov", "government", ""], [75, "sci", "science", "science/biotech"], [100, "csr", "customer service", ""], [125, "trp", "transport", "transportation"], [126, "spa", "salon/spa/fitness", ""], [127, "rej", "real estate", ""], [128, "mnu", "manufacturing", ""], [129, "fbh", "food/bev/hosp", "food/beverage/hospitality"], [130, "lab", "general labor", ""], [131, "sec", "security", ""]], ["rrr", "resumes", "", "R", [10, "res", "resumes", "resumes / job wanted"]], ["sss", "for sale", "", "S", [0, "foa", "general", "general for sale", [5, "for", "general for sale - by owner", ""], [179, "fod", "general for sale - by dealer", ""]], [0, "sya", "computers", "", [7, "sys", "computers - by owner", ""], [166, "syd", "computers - by dealer", ""]], [0, "waa", "wanted", "", [20, "wan", "wanted - by owner", ""], [190, "wad", "wanted - by dealer", ""]], [0, "tia", "tickets", "", [44, "tix", "tickets - by owner", ""], [161, "tid", "tickets - by dealer", ""]], [0, "bia", "bikes", "bicycles", [68, "bik", "bicycles - by owner", ""], [172, "bid", "bicycles - by dealer", ""]], [0, "mca", "motorcycles", "motorcycles/scooters", [69, "mcy", "motorcycles", "motorcycles/scooters - by owner"], [160, "mcd", "motorcycles", "motorcycles/scooters - by dealer"]], [0, "bka", "books", "books & magazines", [92, "bks", "books", "books & magazines - by owner"], [173, "bkd", "books", "books & magazines - by dealer"]], [0, "sga", "sporting", "sporting goods", [93, "spo", "sporting goods - by owner", ""], [186, "sgd", "sporting goods - by dealer", ""]], [0, "cla", "clothes+acc", "clothing & accessories", [94, "clo", "clothes+acc", "clothing & accessories - by owner"], [176, "cld", "clothes+acc", "clothing & accessories - by dealer"]], [0, "cba", "collectibles", "", [95, "clt", "collectibles - by owner", ""], [177, "cbd", "collectibles - by dealer", ""]], [0, "ela", "electronics", "", [96, "ele", "electronics - by owner", ""], [167, "eld", "electronics - by dealer", ""]], [0, "hsa", "household", "household items", [97, "hsh", "household items - by owner", ""], [181, "hsd", "household items - by dealer", ""]], [0, "msa", "music instr", "musical instruments", [98, "msg", "musical instruments - by owner", ""], [184, "msd", "musical instruments - by dealer", ""]], [0, "baa", "baby+kids", "baby & kid stuff", [107, "bab", "baby & kid stuff - by owner", ""], [171, "bad", "baby & kid stuff - by dealer", ""]], [0, "ema", "cds/dvd/vhs", "cds / dvds / vhs", [117, "emd", "cds / dvds / vhs - by owner", ""], [175, "emq", "cds / dvds / vhs - by dealer", ""]], [0, "tla", "tools", "", [118, "tls", "tools - by owner", ""], [187, "tld", "tools - by dealer", ""]], [0, "boo", "boats", "", [119, "boa", "boats - by owner", ""], [164, "bod", "boats - by dealer", ""]], [0, "jwa", "jewelry", "", [120, "jwl", "jewelry - by owner", ""], [182, "jwd", "jewelry - by dealer", ""]], [0, "pta", "auto parts", "", [122, "pts", "auto parts - by owner", ""], [163, "ptd", "auto parts - by dealer", ""]], [0, "rva", "RVs", "recreational vehicles", [124, "rvs", "rvs - by owner", ""], [168, "rvd", "rvs - by dealer", ""]], [0, "taa", "toys+games", "toys & games", [132, "tag", "toys+games", "toys & games - by owner"], [188, "tad", "toys+games", "toys & games - by dealer"]], [0, "gra", "farm+garden", "farm & garden", [133, "grd", "farm+garden", "farm & garden - by owner"], [178, "grq", "farm+garden", "farm & garden - by dealer"]], [0, "bfa", "business", "", [134, "bfs", "business/commercial - by owner", ""], [174, "bfd", "business/commercial - by dealer", ""]], [0, "ara", "arts+crafts", "arts & crafts", [135, "art", "arts & crafts - by owner", ""], [170, "ard", "arts & crafts - by dealer", ""]], [0, "maa", "materials", "", [136, "mat", "materials - by owner", ""], [183, "mad", "materials - by dealer", ""]], [0, "pha", "photo+video", "photo/video", [137, "pho", "photo/video - by owner", ""], [185, "phd", "photo/video - by dealer", ""]], [0, "fua", "furniture", "", [141, "fuo", "furniture - by owner", ""], [142, "fud", "furniture - by dealer", ""]], [0, "cta", "cars+trucks", "cars & trucks", [145, "cto", "cars+trucks", "cars & trucks - by owner"], [146, "ctd", "cars+trucks", "cars & trucks - by dealer"]], [0, "ppa", "appliances", "", [149, "app", "appliances - by owner", ""], [162, "ppd", "appliances - by dealer", ""]], [0, "ata", "antiques", "", [150, "atq", "antiques - by owner", ""], [169, "atd", "antiques - by dealer", ""]], [0, "vga", "video gaming", "", [151, "vgm", "video gaming - by owner", ""], [189, "vgd", "video gaming - by dealer", ""]], [0, "haa", "beauty+hlth", "health and beauty", [152, "hab", "health and beauty - by owner", ""], [180, "had", "health and beauty - by dealer", ""]], [0, "moa", "cell phones", "", [153, "mob", "cell phones - by owner", ""], [165, "mod", "cell phones - by dealer", ""]], [0, "sna", "atvs/utvs/snow", "atvs, utvs, snowmobiles", [191, "snw", "atvs, utvs, snowmobiles - by owner", ""], [192, "snd", "atvs, utvs, snowmobiles - by dealer", ""]], [0, "hva", "heavy equipment", "", [193, "hvo", "heavy equipment - by owner", ""], [194, "hvd", "heavy equipment - by dealer", ""]], [0, "mpa", "motorcycle parts", "motorcycle parts & accessories", [195, "mpo", "motorcycle parts - by owner", ""], [196, "mpd", "motorcycle parts - by dealer", ""]], [0, "bip", "bike parts", "bicycle parts", [197, "bop", "bicycle parts - by owner", ""], [198, "bdp", "bicycle parts - by dealer", ""]], [0, "syp", "computer parts", "", [199, "sop", "computer parts - by owner", ""], [200, "sdp", "computer parts - by dealer", ""]], [0, "bpa", "boat parts", "boat parts & accessories", [201, "bpo", "boat parts - by owner", ""], [202, "bpd", "boat parts - by dealer", ""]], [0, "wta", "auto wheels & tires", "", [203, "wto", "wheels+tires", "auto wheels & tires - by owner"], [204, "wtd", "wheels+tires", "auto wheels & tires - by dealer"]], [0, "tra", "trailers", "", [205, "tro", "trailers - by owner", ""], [206, "trb", "trailers - by dealer", ""]], [0, "ava", "aviation", "", [208, "avo", "aviation - by owner", ""], [209, "avd", "aviation - by dealer", ""]], [42, "bar", "barter", ""], [73, "gms", "garage sales", "garage & moving sales"], [101, "zip", "free stuff", ""]]]

scrape_item_detail.py

def usage():
    print("python " + str(sys.argv[0]) + "[--city [craigslist city name]] [--category [3 letter craigslist category id or \"all\"]] [--database [database tables go in]] \n" +
                                         " [--use_timestamp [appended timestamp of table to use]] [--replace_database_tables] \n" +
                                         " \'use_timestamp\' defaults to \"\".  Leave it unset to use the base table. \n" +
                                         " \'replace_database_tables\' defaults to FALSE.  Use the flag to set to TRUE to overwrite the result table which requests new data for every id.") 

    This program runs on the table results of scrape_id_list.py table.  "craigslist_<city>_<category>_short"

        It searches the table for data items it hasn't already pulled yet (assuming ongoing runs) and pulls the detailed record page for each item. 
        (Note, there is a 3-5 second randomized wait between calls to keep from being tagged as a data scraper.)

        It then pulls the long description and adds it to the previous data to create a new table: "craigslist_<city>_<category>_long"

        TODO:
            There is a field "more ads by this user" that sometimes appears and has a url associated with it that contains all of the other items that that seller has created.
            Grab and store the data for that page in a field and maybe count the items on the page and store that in a field.  (Study might want to search on sellers who have large amounts of listed items)

